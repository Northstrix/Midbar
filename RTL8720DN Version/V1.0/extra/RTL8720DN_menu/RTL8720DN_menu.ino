/*
Midbar
Distributed under the MIT License
Â© Copyright Maxim Bortnikov 2023
For more information please visit
https://sourceforge.net/projects/midbar/
https://osdn.net/projects/midbar/
https://github.com/Northstrix/Midbar
Required libraries:
https://github.com/zhouyangchao/AES
https://github.com/ddokkaebi/Blowfish
https://github.com/intrbiz/arduino-crypto
https://github.com/GyverLibs/EncButton
https://github.com/techpaul/PS2KeyAdvanced
https://github.com/techpaul/PS2KeyMap
*/
#include "SPI.h"
#include "AmebaILI9341.h"
#include <Wire.h>

// For all supported boards (AMB21/AMB22, AMB23, BW16/BW16-TypeC, AW-CU488_ThingPlus), 
// Select 2 GPIO pins connect to TFT_RESET and TFT_DC. And default SPI_SS/SPI1_SS connect to TFT_CS.
#define TFT_RESET       6
#define TFT_DC          2
#define TFT_CS          9
#define SPI_BUS         SPI

AmebaILI9341 tft = AmebaILI9341(TFT_CS, TFT_DC, TFT_RESET, SPI_BUS);

String keyboard_input;
int curr_key;
const uint16_t current_inact_clr = 0x051b;
const uint16_t five_six_five_red_color = 0xf940;
bool finish_input;
byte i2c_data;
bool act;
bool rec_d;

const uint16_t handwritten_midbar PROGMEM [320][41] = {
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,131,261,261,65,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,163,621,1013,1308,1308,1308,1308,1308,1209,1013,752,163,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,98,784,1275,1275,1079,882,653,653,784,850,1242,1308,1308,1308,883,229,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,294,1242,1046,294,32,0,0,0,0,0,0,32,392,948,1308,1308,1308,817,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,425,1242,621,0,0,0,0,0,0,0,0,0,0,0,0,392,1111,1308,1308,882,32,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,327,1209,196,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,1013,1308,1308,1013,32,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,98,1177,556,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,1013,1308,1308,719,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,817,1079,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,98,1209,1308,1275,261,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,131,1275,294,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,425,1308,1308,1046,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,719,1177,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,948,1308,1308,425,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,1111,948,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,359,1308,1308,883,0,0,0,0},
{0,0,0,0,0,0,0,0,0,98,1308,719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1111,1308,1275,98,0,0,0},
{0,0,0,0,0,0,0,0,0,425,1308,490,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,654,1308,1308,490,0,0,0},
{0,0,0,0,0,0,0,0,0,556,1308,392,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,392,1308,1308,752,0,0,0},
{0,0,0,0,0,0,0,0,0,653,1308,556,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,1308,1308,883,0,0,0},
{0,0,0,0,0,0,0,0,0,784,1308,784,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1144,1308,1046,0,0,0},
{0,0,0,0,0,0,0,0,0,719,1308,1013,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1111,1308,1144,0,0,0},
{0,0,0,0,0,0,0,0,0,621,1308,1242,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,980,1308,1144,0,0,0},
{0,0,0,0,0,0,0,0,0,490,1308,1308,490,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,980,1308,1046,0,0,0},
{0,0,0,0,0,0,0,0,0,262,1308,1308,1013,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,980,1308,948,0,0,0},
{0,0,0,0,0,0,0,0,0,0,1209,1308,1308,196,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1144,1308,686,0,0,0},
{0,0,0,0,0,0,0,0,0,0,784,1308,1308,784,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1242,1308,359,0,0,0},
{0,0,0,0,0,0,0,0,0,0,327,1308,1308,1275,229,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,229,1308,1275,65,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,1079,1308,1308,1046,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,555,1308,915,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,294,1308,1308,1308,588,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,882,1308,327,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,817,1308,1308,1242,131,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,98,1275,1046,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,98,1242,1308,1308,1013,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,621,1308,458,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,392,1308,1308,1308,784,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,1177,1013,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,719,1308,1308,1308,555,0,0,0,0,0,0,0,0,0,0,0,0,0,621,1308,261,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1046,1308,1308,1275,327,0,0,0,0,0,0,0,0,0,0,0,98,1242,784,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,131,1242,1308,1308,1242,196,0,0,0,0,0,0,0,0,0,0,784,1111,65,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,392,1308,1308,1308,1177,32,0,0,0,0,0,0,0,0,392,1275,229,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,784,1308,1308,817,0,0,0,0,0,0,0,0,131,1242,556,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,98,1275,1275,163,0,0,0,0,0,0,0,0,1046,784,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,1275,719,0,0,0,0,0,0,0,0,882,882,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,326,1242,65,0,0,0,0,0,0,0,817,1013,65,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,883,588,0,0,0,0,0,0,0,719,1013,65,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,131,1144,32,0,0,0,0,0,0,817,980,65,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,0,0,65,948,882,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,131,1013,784,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,327,1177,490,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,65,131,131,131,0,0,0,653,1176,262,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,163,621,980,1111,1242,1308,1308,1308,1308,1275,1079,1079,1275,490,65,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,131,621,1046,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,1046,784,490,229,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,98,784,1242,1013,719,490,359,326,326,326,425,588,1013,1308,1111,1275,1308,1308,1308,1308,1308,1308,1308,1308,1275,1046,784,588,425,326,326,392,588,1046,653,0,0,0},
{0,0,490,1242,784,98,0,0,0,0,0,0,0,392,980,1176,425,0,65,359,686,980,1275,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,654,0,0,0,0},
{0,490,1308,1013,0,0,0,0,0,0,32,490,1111,1275,654,32,0,0,0,0,0,0,32,262,588,883,1242,1308,1308,1308,1308,1308,1308,1308,1242,458,0,0,0,0,0},
{0,1176,1308,1242,229,0,65,196,490,850,1209,1275,817,163,0,0,0,0,0,0,0,0,0,0,0,0,0,196,392,556,752,948,1275,1176,261,0,0,0,0,0,0},
{0,1242,1308,1308,1308,1308,1308,1308,1308,1275,817,163,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,817,1013,98,0,0,0,0,0,0,0},
{0,392,1176,1308,1308,1308,1242,883,458,65,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,131,1046,784,0,0,0,0,0,0,0,0,0},
{0,0,0,131,131,65,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,326,1176,555,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,523,1177,327,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,784,1046,131,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,98,1013,817,65,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,261,1144,621,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,490,1177,359,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,719,1079,163,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,98,948,882,65,0,0,0,0,0,0,0,0,0,0,131,327,490,621,653,65,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,196,1111,621,0,0,0,0,0,0,65,392,621,882,1079,1275,1308,1308,1308,1308,1046,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,425,1144,327,0,0,65,294,556,882,1111,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,523,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,653,1079,392,555,784,1046,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,1242,65,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,915,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,1144,915,719,523,327,294,654,1308,784,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,196,1111,1308,1308,1308,1308,1308,1308,1308,1209,948,719,490,261,65,0,0,0,0,0,0,65,1308,261,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,327,1242,1308,1308,1308,1275,1046,752,458,163,0,0,0,0,0,0,0,0,0,0,0,0,359,1079,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,556,1275,1308,1275,850,359,65,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,719,555,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,817,1308,1079,555,65,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,65,0,0,0,0,0},
{0,0,0,0,0,0,0,0,65,1013,1209,425,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,98,1111,883,98,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,196,1144,588,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0},
{0,0,0,0,0,65,1111,784,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,392,719,915,1176,1177,0,0,0},
{0,0,0,0,0,850,980,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,196,719,1209,1308,1308,1308,1308,686,0,0,0},
{0,0,0,0,556,1308,294,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,327,915,1308,1308,1308,1308,1308,1308,1308,131,0,0,0},
{0,0,0,294,1275,1242,0,0,0,0,0,0,0,0,0,0,0,0,654,458,0,0,0,0,0,32,490,1079,1308,1308,1308,1308,1275,948,653,1275,883,0,0,0,0},
{0,0,0,1013,1308,883,0,0,0,0,0,0,0,0,0,0,0,0,1176,131,0,0,0,98,621,1177,1308,1308,1308,1308,1111,588,98,0,0,1177,294,0,0,0,0},
{0,0,196,1308,1308,1013,0,0,0,0,0,0,0,0,0,0,0,392,1176,0,0,262,784,1275,1308,1308,1308,1308,948,359,0,0,0,0,229,1013,0,0,0,0,0},
{0,0,752,1308,1308,1242,392,196,261,0,0,0,0,0,0,0,0,948,1308,882,1111,1308,1308,1308,1308,1275,784,196,0,0,0,0,0,0,65,163,0,0,0,0,0},
{0,0,1046,1308,1308,1308,1308,1209,621,0,0,0,0,0,0,0,131,1308,1308,1308,1308,1308,1308,1177,621,98,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,1242,1308,1111,686,294,0,0,0,0,0,0,0,0,0,686,1308,1308,1308,1275,948,425,0,0,0,0,0,0,0,0,0,261,686,915,1079,817,294,0,0,0},
{0,65,556,163,0,0,0,0,0,0,0,0,0,0,0,32,1177,1275,948,555,98,0,0,0,0,0,0,0,0,0,458,1046,1308,1308,1308,1308,1308,1046,0,0,0},
{0,0,0,0,0,0,0,0,0,392,1177,1013,0,0,0,32,131,0,0,0,0,0,0,0,0,0,0,0,261,1013,1308,1308,1308,1308,1308,1308,1308,1275,0,0,0},
{0,0,0,0,0,0,0,0,0,1013,1308,1144,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,654,1275,1275,883,556,392,327,621,1242,1308,1046,0,0,0},
{0,0,0,0,0,0,0,0,0,556,1013,327,0,0,0,0,0,0,0,0,0,0,0,0,0,98,948,1242,588,98,0,0,0,0,0,654,1308,490,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,98,1111,850,98,0,0,0,0,0,0,0,784,1144,32,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,98,1111,588,0,0,0,0,0,0,0,0,32,1176,392,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,1046,425,0,0,0,0,0,0,0,0,0,784,817,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,1013,490,0,0,0,0,0,0,0,0,0,458,1046,32,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,719,817,0,0,0,0,0,0,0,0,0,425,1176,131,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,326,1046,32,0,0,0,0,0,0,0,0,556,1177,196,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,1144,327,0,0,0,0,0,0,0,65,850,1177,196,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,719,915,0,0,0,0,0,0,0,327,1176,1079,163,0,0,0,0,229,653,32,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,1242,163,0,0,0,0,0,229,883,1308,817,65,0,0,326,784,1176,1308,1013,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,621,1013,0,0,0,0,327,883,1308,1177,490,0,131,653,1144,1308,1308,1308,1308,490,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,1177,490,0,98,719,1176,1308,1176,621,65,425,980,1308,1308,1308,1308,1308,1308,1275,65,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,425,1308,98,0,0,65,261,65,131,653,1177,1308,1308,1308,1308,1209,784,556,1177,882,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,784,1176,0,0,0,32,425,948,1308,1308,1308,1308,1275,850,392,0,0,0,1046,229,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1111,1013,0,261,752,1242,1308,1308,1308,1308,1046,555,98,0,0,0,0,229,850,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,98,1308,1111,1046,1308,1308,1308,1308,1242,784,261,0,0,0,0,0,0,0,817,163,0,0,0,0,0},
{0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,261,882,1308,1308,1308,1308,1308,1013,490,65,0,0,0,0,0,0,0,0,0,32,0,0,326,0,0,0},
{0,0,0,0,0,1046,196,0,0,0,0,0,65,555,1046,1308,1308,1308,1308,1242,752,196,0,0,0,0,0,0,0,0,0,0,0,0,65,523,1079,1177,0,0,0},
{0,0,0,0,261,1308,0,0,0,0,359,850,1275,1308,1308,1308,1308,1308,1177,32,0,0,0,0,0,0,0,0,0,0,0,0,163,719,1242,1308,1308,1079,0,0,0},
{0,0,0,0,784,1308,653,425,719,1176,1308,1308,1308,1308,1177,686,261,1176,1308,65,0,0,0,0,0,0,0,0,0,0,392,915,1308,1308,1308,1308,1308,980,0,0,0},
{0,0,0,65,1242,1308,1308,1308,1308,1308,1308,1308,948,425,0,0,0,131,654,163,0,0,0,0,0,0,0,65,556,1111,1308,1308,1308,1308,1111,980,1308,686,0,0,0},
{0,0,0,556,1308,1308,1308,1308,1308,1177,686,131,0,0,0,0,0,0,0,0,0,0,0,0,0,196,784,1242,1308,1308,1308,1308,1046,425,0,653,1308,294,0,0,0},
{0,0,0,1144,1308,1308,1275,948,425,0,0,0,0,0,0,0,0,0,0,0,0,0,32,458,1013,1308,1308,1308,1308,1308,980,392,0,0,0,817,1209,0,0,0,0},
{0,0,490,1242,948,556,98,0,0,0,0,0,0,0,0,0,0,0,0,0,163,719,1209,1308,1308,1308,1308,1308,1046,326,0,0,0,0,0,1013,784,0,0,0,0},
{0,0,98,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,425,948,1308,1308,1308,1308,1308,1308,1275,719,32,0,0,0,0,0,32,1242,163,0,0,0,0},
{0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,131,653,1176,1308,1308,1308,1308,1275,1242,1308,1144,326,0,0,0,0,0,0,0,425,883,0,0,0,0,0},
{0,0,0,0,0,1079,131,0,0,0,0,0,32,425,948,1308,1308,1308,1308,1308,1144,621,654,1308,817,65,0,0,0,0,0,0,0,0,1013,229,0,0,0,0,0},
{0,0,0,0,327,1242,0,0,0,0,294,784,1242,1308,1308,1308,1308,1308,948,392,0,425,1275,425,0,0,0,0,0,0,0,0,0,425,850,0,0,0,0,0,0},
{0,0,0,0,883,1242,196,359,752,1176,1308,1308,1308,1308,1308,1177,686,131,0,0,359,1242,392,0,0,0,0,0,0,0,0,0,131,1111,98,0,0,0,0,0,0},
{0,0,0,163,1308,1308,1308,1308,1308,1308,1308,1308,1275,915,392,0,0,0,0,98,1176,326,0,0,0,0,0,0,0,0,0,65,1013,425,0,0,0,0,0,0,0},
{0,0,0,719,1308,1308,1308,1308,1308,1308,1079,588,98,0,0,0,0,0,0,915,458,0,0,0,0,0,0,0,0,0,65,1013,882,0,0,0,0,0,0,0,0},
{0,0,65,1242,1308,1308,1308,1176,719,229,0,0,0,0,0,0,0,0,490,817,0,0,0,0,0,0,0,0,0,131,1111,1046,65,0,0,0,0,0,0,0,0},
{0,0,555,1275,1013,654,294,0,0,0,0,0,0,0,0,0,0,32,1144,131,0,0,0,0,0,0,0,0,556,1242,1111,98,0,0,0,0,0,0,0,0,0},
{0,0,131,65,0,0,0,0,0,0,0,0,0,0,0,0,0,523,1046,0,0,0,0,0,0,0,294,1079,1308,1209,196,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1111,915,0,0,0,0,0,131,817,1308,1308,1209,294,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,196,1308,1275,294,0,131,425,915,1275,1308,1308,1046,131,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,458,1308,1308,1308,1308,1308,1308,1308,1308,1308,850,65,0,0,0,0,0,32,131,294,65,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,621,1308,1308,1308,1308,1308,1308,1308,1242,556,0,0,0,0,0,392,817,1242,1308,1308,1308,719,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,294,1308,1308,1308,1308,1308,1275,752,65,0,0,0,0,359,1046,1308,1308,1308,1308,1308,1308,1275,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,654,1111,1176,883,621,163,0,0,0,0,65,817,1308,1308,1242,1079,948,1144,1308,1308,1046,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,196,1144,1308,915,392,32,0,0,0,621,1308,719,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,196,1177,1046,262,0,0,0,0,0,0,326,1275,196,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,294,1209,654,0,0,0,0,0,0,0,0,719,653,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,294,1209,458,0,0,0,0,0,0,0,0,261,1046,32,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,229,1242,425,0,0,0,0,0,0,0,0,98,1111,261,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1046,555,0,0,0,0,0,0,0,0,163,1111,425,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,719,621,0,0,0,0,0,0,0,0,196,1144,621,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,360,948,0,0,0,0,0,0,0,0,359,1176,752,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1111,261,0,0,0,0,0,0,0,621,1308,719,0,0,327,686,1013,1275,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,654,719,0,0,0,0,0,0,294,915,1308,751,196,654,1112,1308,1308,1308,751,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,1242,98,0,0,0,0,164,817,1308,1308,1046,1046,1308,1308,1308,1308,1308,1308,196,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,654,948,0,0,0,262,719,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,1046,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1209,523,424,915,1242,1308,1308,1308,915,196,1308,1308,1308,1112,653,163,33,1307,490,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,425,1308,130,719,1275,1308,1242,850,359,0,457,1308,915,359,0,0,0,327,1078,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,882,1210,0,0,0,130,0,0,0,0,654,262,0,0,0,0,0,1046,360,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1274,1111,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,490,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,229,1308,980,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,490,1308,850,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,294,752,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,686,1308,947,0,0,0,0,0,0,0,0,0,0,0,0,0,0,131,588,1078,1308,1111,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,752,1308,1079,0,0,0,0,0,0,0,0,0,0,0,0,425,915,1308,1308,1308,1308,621,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,849,1308,1242,392,751,0,0,0,0,0,0,0,327,784,1242,1308,1308,1308,1308,1308,915,131,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,686,817,360,1111,425,0,0,0,0,294,719,1111,1308,1308,1308,1308,1274,849,425,65,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,457,1308,131,98,425,785,1177,1308,1308,1308,1308,1308,915,425,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1079,1308,1308,1308,1308,1308,1308,1308,1308,1308,687,196,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,752,1308,1308,1308,1308,1308,1308,1308,1308,817,163,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,360,1308,1308,1308,1308,1144,915,1274,1013,327,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1308,1111,915,588,228,164,1079,523,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,229,1307,359,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,261,1307,261,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,98,1111,424,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,980,784,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,719,1308,163,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,392,1308,1274,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,850,1308,1308,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1079,1308,1079,97,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,555,229,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,326,948,719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,65,883,1308,1275,294,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,131,1046,1308,1275,425,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,1046,1308,1275,425,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,719,1308,1308,490,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,229,1308,1308,784,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,883,1308,1046,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,229,1308,1308,425,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,654,1308,1176,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,1013,1308,621,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,65,1275,1308,392,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,131,1308,1308,326,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,131,1308,1308,131,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,131,1308,1308,131,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,1275,1308,392,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,1046,1308,621,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,555,0,0,0,0,0},
{0,0,0,653,1308,1111,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,229,1111,1308,65,0,0,0,0},
{0,0,0,32,1177,1308,621,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,490,1275,1308,654,0,0,0,0,0},
{0,0,0,0,490,1308,1275,326,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,98,882,1308,1275,556,0,0,0,0,0,0},
{0,0,0,0,0,556,1308,1275,425,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,425,1209,1308,1275,425,0,0,0,0,0,0,0},
{0,0,0,0,0,0,556,1308,1308,850,163,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,196,948,1308,1308,1176,294,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,556,1275,1308,1275,784,261,0,0,0,0,0,0,0,0,0,0,0,0,163,752,1275,1308,1275,686,65,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,196,980,1308,1308,1308,1079,621,229,0,0,0,0,0,0,65,425,915,1308,1308,1308,948,196,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,425,1111,1308,1308,1308,1308,1275,1013,980,980,980,1111,1308,1308,1308,1209,752,261,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,196,621,1013,1275,1308,1308,1308,1308,1308,1242,1013,784,392,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,98,131,229,294,98,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,425,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,65,948,458,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,686,1242,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,163,1275,817,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,719,1308,327,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,1046,1209,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,98,261,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,65,1308,817,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,262,653,1046,1308,1308,392,0,0},
{0,0,0,0,0,0,0,0,0,0,0,392,1308,458,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,425,817,1209,1308,1308,1308,1111,425,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,784,1308,98,0,0,0,0,0,0,0,0,0,0,0,229,556,817,1111,1308,1308,1308,1308,1111,654,229,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,1111,1046,0,0,0,0,0,0,0,0,0,0,0,817,1308,1308,1308,1308,1308,1176,686,229,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,98,1308,817,0,0,0,0,0,0,0,0,0,0,0,458,1308,1308,1308,980,294,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,196,1308,621,0,0,0,0,0,0,0,0,0,0,0,0,326,1144,1308,1275,555,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,326,1308,425,0,0,0,0,0,0,0,0,0,0,0,0,0,65,817,1308,1308,817,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,326,1308,261,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,392,1209,1308,1013,98,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,490,1308,131,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,131,1046,1308,1111,196,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,490,1308,262,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,817,1308,1242,326,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,621,1308,326,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,556,1308,1209,98,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,621,1308,392,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,686,1308,817,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,490,1308,490,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,948,1308,326,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,326,1308,784,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,229,1308,817,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,163,1308,1144,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,883,1209,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,32,1308,1308,163,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,425,1308,262,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,1013,1308,523,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,229,1308,621,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,556,1308,1013,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,1308,752,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,131,1308,1308,326,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,98,1308,817,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,1013,1308,980,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,359,1308,817,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,392,1308,1308,326,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,588,1308,653,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,817,1308,1176,98,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1111,1308,327,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,98,1209,1308,980,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,490,1308,1209,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,392,1275,1308,784,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1111,1308,653,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,425,1275,1308,1013,131,0,0,0,0,0,0,0,0,0,0,0,0,0,882,1308,1177,65,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,294,1242,1308,1209,392,0,0,0,0,0,0,0,0,0,0,0,882,1308,1177,196,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,196,1144,1308,1308,1046,490,32,0,0,0,0,0,0,327,948,1308,1177,196,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,654,1275,1308,1308,1209,784,556,490,490,653,1144,1308,1308,980,196,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,163,719,1177,1308,1308,1308,1308,1308,1308,1308,1046,326,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,327,621,784,948,752,490,229,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,229,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,228,981,523,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,327,1275,850,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,1078,1177,98,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,719,1308,523,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,33,1308,1013,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,457,1308,425,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,850,1210,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,458,1046,1275,1308,490,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,1242,752,0,0,0,0,0,0,0,0,0,0,0,0,0,0,458,1308,1308,1307,1308,1013,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,294,1308,523,0,0,0,0,0,0,0,0,0,0,0,0,0,32,1176,1308,719,32,1308,1078,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,457,1308,360,0,0,0,0,0,0,0,0,0,0,0,0,0,719,1308,1111,0,229,1308,1013,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,588,1308,392,0,0,0,0,0,0,0,0,0,0,0,0,0,1177,1308,458,0,458,1308,883,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,719,1308,327,0,0,0,0,0,0,0,0,0,0,0,0,196,1308,1308,33,0,719,1308,719,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,882,1308,457,0,0,0,0,0,0,0,0,0,0,0,0,490,1308,1209,0,0,981,1308,490,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,752,1308,556,0,0,0,0,0,0,0,0,0,0,0,0,458,1308,1046,0,0,1242,1308,196,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,621,1308,686,0,0,0,0,0,0,0,0,0,0,0,0,392,1308,1176,0,425,1308,1176,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,458,1308,948,0,0,0,0,0,0,0,0,0,0,0,0,294,1308,1308,0,915,1308,653,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,327,1308,1177,0,0,0,0,0,0,0,0,0,0,0,0,65,1308,1308,915,1308,1242,65,0,0,0,0,0,0,0,0,0,0,0,0,948,0,0},
{0,0,0,0,65,1308,1308,130,0,0,0,0,0,0,0,0,0,0,0,0,1013,1308,1308,1308,556,0,0,0,0,0,0,0,0,0,0,0,0,686,1111,0,0},
{0,0,0,0,0,915,1308,490,0,0,0,0,0,0,0,0,0,0,0,0,654,1308,1308,850,0,0,0,0,0,0,0,0,0,0,0,0,457,1308,882,0,0},
{0,0,0,0,0,523,1308,1046,0,0,0,0,0,0,0,0,0,0,0,0,653,1308,1308,719,0,0,0,0,0,0,0,0,0,0,0,262,1308,1308,229,0,0},
{0,0,0,0,0,98,1308,1308,327,0,0,0,0,0,0,0,0,0,0,490,1308,1308,1308,1308,556,0,0,0,0,0,0,0,0,0,196,1144,1308,654,0,0,0},
{0,0,0,0,0,0,785,1308,1144,131,0,0,0,0,0,0,0,0,425,1308,1308,457,752,1308,1308,752,33,0,0,0,0,0,0,327,1144,1308,719,0,0,0,0},
{0,0,0,0,0,0,32,1112,1308,1013,294,0,0,0,0,0,0,621,1308,1275,360,0,0,457,1274,1308,1274,719,327,65,163,490,915,1308,1308,654,0,0,0,0,0},
{0,0,0,0,0,0,0,262,1046,1308,1308,948,719,654,621,915,1209,1308,1112,262,0,0,0,0,196,751,1307,1308,1308,1308,1308,1308,1308,1013,360,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,752,1242,1308,1308,1308,1308,1308,980,425,0,0,0,0,0,0,0,0,98,654,1013,1177,1079,785,457,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,392,653,588,523,294,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,196,359,196,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,131,261,392,490,556,588,621,686,719,752,784,817,915,981,1078,1176,1308,1308,1308,1308,621,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,196,523,882,1210,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,1275,817,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,882,1308,1308,1308,1308,1307,1079,882,752,621,523,425,425,425,425,425,425,425,425,425,327,196,66,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,1144,1308,1308,621,262,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,294,1209,1308,948,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,164,1013,1308,948,98,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,785,1308,1144,327,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,588,1308,1308,556,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,392,1209,1308,784,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,164,1013,1308,1144,392,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,785,1308,1308,752,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,588,1308,1308,1079,294,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,359,1176,1308,1308,588,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,98,883,1308,1308,850,65,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,621,1308,1308,1111,262,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,392,1209,1308,1308,523,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,163,980,1308,1308,654,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,785,1308,1308,752,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,621,1308,1308,882,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,523,1308,1308,882,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,589,1308,1308,850,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,229,392,588,654,719,752,784,686,588,490,327,131,981,1308,1308,817,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,131,425,654,850,1013,1177,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,556,0,0,0},
{0,0,0,0,0,0,0,0,0,0,65,457,817,1111,1308,1308,1308,1308,1308,1307,1177,1078,948,817,784,817,849,882,883,948,1111,1274,1308,1308,1308,1308,1308,1308,294,0,0},
{0,0,0,0,0,0,0,98,523,947,1308,1308,1308,1308,1079,850,621,392,131,0,0,0,0,0,0,0,0,0,0,0,0,0,98,261,458,850,1242,1308,850,0,0},
{0,0,0,0,0,425,882,1308,1308,1308,1111,752,392,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,196,588,0,0},
{0,0,0,556,1144,1308,1308,1144,588,196,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,490,1177,1308,1308,1078,523,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{621,1308,1308,1079,425,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{1308,1308,687,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{1274,294,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
};

void disp_centered_text(String text, int h) {
  int text_width = text.length() * 12;
  tft.setCursor((320 - text_width) / 2, h);
  tft.print(text);
}

void disp_button_designation() {
  tft.setFontSize(1);
  tft.setForeground(0x07e0);
  tft.setCursor(0, 232);
  tft.print("A button, 'Enter' - continue ");
  tft.setForeground(five_six_five_red_color);
  tft.print("B button, 'Esc' - cancel");
}

void disp_button_designation_for_del() {
  tft.setFontSize(1);
  tft.setForeground(five_six_five_red_color);
  tft.setCursor(0, 232);
  tft.print("A button, 'Enter' - continue ");
  tft.setForeground(0x07e0);
  tft.print("B button, 'Esc' - cancel");
}

void call_main_menu() {
  tft.fillScreen(0x0000);
  for (int i = 0; i < 320; i++) {
    for (int j = 0; j < 40; j++) {
      tft.drawPixel(i, j + 10, handwritten_midbar[i][j]);
    }
  }
  curr_key = 0;
  main_menu();
}

void main_menu() {
  tft.setFontSize(2);
  byte sdown = 70;
  if (curr_key == 0) {
    tft.setForeground(0xffff);
    disp_centered_text("Logins", sdown + 10);
    tft.setForeground(current_inact_clr);
    disp_centered_text("Credit Cards", sdown + 30);
    disp_centered_text("Encrypt String", sdown + 50);
    disp_centered_text("Decrypt String", sdown + 70);
    disp_centered_text("SHA-256", sdown + 90);
    disp_centered_text("Other Options", sdown + 110);
  }
  if (curr_key == 1) {
    tft.setForeground(current_inact_clr);
    disp_centered_text("Logins", sdown + 10);
    tft.setForeground(0xffff);
    disp_centered_text("Credit Cards", sdown + 30);
    tft.setForeground(current_inact_clr);
    disp_centered_text("Encrypt String", sdown + 50);
    disp_centered_text("Decrypt String", sdown + 70);
    disp_centered_text("SHA-256", sdown + 90);
    disp_centered_text("Other Options", sdown + 110);
  }
  if (curr_key == 2) {
    tft.setForeground(current_inact_clr);
    disp_centered_text("Logins", sdown + 10);
    disp_centered_text("Credit Cards", sdown + 30);
    tft.setForeground(0xffff);
    disp_centered_text("Encrypt String", sdown + 50);
    tft.setForeground(current_inact_clr);
    disp_centered_text("Decrypt String", sdown + 70);
    disp_centered_text("SHA-256", sdown + 90);
    disp_centered_text("Other Options", sdown + 110);
  }
  if (curr_key == 3) {
    tft.setForeground(current_inact_clr);
    disp_centered_text("Logins", sdown + 10);
    disp_centered_text("Credit Cards", sdown + 30);
    disp_centered_text("Encrypt String", sdown + 50);
    tft.setForeground(0xffff);
    disp_centered_text("Decrypt String", sdown + 70);
    tft.setForeground(current_inact_clr);
    disp_centered_text("SHA-256", sdown + 90);
    disp_centered_text("Other Options", sdown + 110);
  }
  if (curr_key == 4) {
    tft.setForeground(current_inact_clr);
    disp_centered_text("Logins", sdown + 10);
    disp_centered_text("Credit Cards", sdown + 30);
    disp_centered_text("Encrypt String", sdown + 50);
    disp_centered_text("Decrypt String", sdown + 70);
    tft.setForeground(0xffff);
    disp_centered_text("SHA-256", sdown + 90);
    tft.setForeground(current_inact_clr);
    disp_centered_text("Other Options", sdown + 110);
  }
  if (curr_key == 5) {
    tft.setForeground(current_inact_clr);
    disp_centered_text("Logins", sdown + 10);
    disp_centered_text("Credit Cards", sdown + 30);
    disp_centered_text("Encrypt String", sdown + 50);
    disp_centered_text("Decrypt String", sdown + 70);
    disp_centered_text("SHA-256", sdown + 90);
    tft.setForeground(0xffff);
    disp_centered_text("Other Options", sdown + 110);
  }
}

void logins_in_flash_menu(){
  tft.setFontSize(2);
  byte sdown = 60;
  if (curr_key == 0) {
    tft.setForeground(0xffff);
    disp_centered_text("Add", sdown + 10);
    tft.setForeground(current_inact_clr);
    disp_centered_text("Delete", sdown + 30);
    disp_centered_text("View", sdown + 50);
  }
  if (curr_key == 1) {
    tft.setForeground(current_inact_clr);
    disp_centered_text("Add", sdown + 10);
    tft.setForeground(0xffff);
    disp_centered_text("Delete", sdown + 30);
    tft.setForeground(current_inact_clr);
    disp_centered_text("View", sdown + 50);
  }
  if (curr_key == 2) {
    tft.setForeground(current_inact_clr);
    disp_centered_text("Add", sdown + 10);
    disp_centered_text("Delete", sdown + 30);
    tft.setForeground(0xffff);
    disp_centered_text("View", sdown + 50);
  }
}

void logins_in_flash(){
  tft.fillScreen(0x0000);
  tft.setFontSize(2);
  tft.setForeground(current_inact_clr);
  disp_centered_text("Logins Menu", 10);
  curr_key = 0;
  disp_button_designation();
  logins_in_flash_menu();
  bool cont_to_next = false;
  while (cont_to_next == false) {
    if (rec_d == true) {
      rec_d = false;
      //Serial.println(i2c_data);
      if (i2c_data == 130 || i2c_data == 132) { // Rightwards Arrow or Downwards Arrow
        curr_key++;
      }

      if (i2c_data == 129 || i2c_data == 131) { // Leftwards Arrow or Upwards Arrow
        curr_key--;
      }

      if (curr_key < 0)
        curr_key = 2;

      if (curr_key > 2)
        curr_key = 0;
      
      logins_in_flash_menu();
      
      if (i2c_data == 13 || i2c_data == 133) { // Enter or A
        if (curr_key == 0 && cont_to_next == false){
          cont_to_next = true;
          Serial.println("Add Login");
        }
        if (curr_key == 1 && cont_to_next == false){
          cont_to_next = true;
          Serial.println("Delete Login");
        }
        if (curr_key == 2 && cont_to_next == false){
          cont_to_next = true;
          Serial.println("View Login");
        }
      }

      if (i2c_data == 27 || i2c_data == 8) { // ESC, Backspace or B
        cont_to_next = true;
      }
    }
    delay(1);
  }
  call_main_menu();
  return;
}

void credit_cards_in_flash_menu(){
  tft.setFontSize(2);
  byte sdown = 60;
  if (curr_key == 0) {
    tft.setForeground(0xffff);
    disp_centered_text("Add", sdown + 10);
    tft.setForeground(current_inact_clr);
    disp_centered_text("Delete", sdown + 30);
    disp_centered_text("View", sdown + 50);
  }
  if (curr_key == 1) {
    tft.setForeground(current_inact_clr);
    disp_centered_text("Add", sdown + 10);
    tft.setForeground(0xffff);
    disp_centered_text("Delete", sdown + 30);
    tft.setForeground(current_inact_clr);
    disp_centered_text("View", sdown + 50);
  }
  if (curr_key == 2) {
    tft.setForeground(current_inact_clr);
    disp_centered_text("Add", sdown + 10);
    disp_centered_text("Delete", sdown + 30);
    tft.setForeground(0xffff);
    disp_centered_text("View", sdown + 50);
  }
}

void credit_cards_in_flash(){
  tft.fillScreen(0x0000);
  tft.setFontSize(2);
  tft.setForeground(current_inact_clr);
  disp_centered_text("Credit Cards Menu", 10);
  curr_key = 0;
  disp_button_designation();
  credit_cards_in_flash_menu();
  bool cont_to_next = false;
  while (cont_to_next == false) {
    if (rec_d == true) {
      rec_d = false;
      //Serial.println(i2c_data);
      if (i2c_data == 130 || i2c_data == 132) { // Rightwards Arrow or Downwards Arrow
        curr_key++;
      }

      if (i2c_data == 129 || i2c_data == 131) { // Leftwards Arrow or Upwards Arrow
        curr_key--;
      }

      if (curr_key < 0)
        curr_key = 2;

      if (curr_key > 2)
        curr_key = 0;
      
      credit_cards_in_flash_menu();
      
      if (i2c_data == 13 || i2c_data == 133) { // Enter or A
        if (curr_key == 0 && cont_to_next == false){
          cont_to_next = true;
          Serial.println("Add Credit Card");
        }
        if (curr_key == 1 && cont_to_next == false){
          cont_to_next = true;
          Serial.println("Delete Credit Card");
        }
        if (curr_key == 2 && cont_to_next == false){
          cont_to_next = true;
          Serial.println("View Credit Card");
        }
      }

      if (i2c_data == 27 || i2c_data == 8) { // ESC, Backspace or B
        cont_to_next = true;
      }
    }
    delay(1);
  }
  call_main_menu();
  return;
}

void choose_input_source_menu(){
  tft.setFontSize(2);
  byte sdown = 60;
  if (curr_key == 0) {
    tft.setForeground(0xffff);
    disp_centered_text("Encoder + Keyboard", sdown + 10);
    tft.setForeground(current_inact_clr);
    disp_centered_text("Serial Terminal", sdown + 30);
  }
  if (curr_key == 1) {
    tft.setForeground(current_inact_clr);
    disp_centered_text("Encoder + Keyboard", sdown + 10);
    tft.setForeground(0xffff);
    disp_centered_text("Serial Terminal", sdown + 30);
  }
}

byte choose_input_source(){
  tft.fillScreen(0x0000);
  tft.setFontSize(2);
  tft.setForeground(current_inact_clr);
  disp_centered_text("Choose Input Source", 10);
  curr_key = 0;
  disp_button_designation();
  choose_input_source_menu();
  bool cont_to_next = false;
  byte input_from = 0;
  while (cont_to_next == false) {
    if (rec_d == true) {
      rec_d = false;
      //Serial.println(i2c_data);
      if (i2c_data == 130 || i2c_data == 132) { // Rightwards Arrow or Downwards Arrow
        curr_key++;
      }

      if (i2c_data == 129 || i2c_data == 131) { // Leftwards Arrow or Upwards Arrow
        curr_key--;
      }

      if (curr_key < 0)
        curr_key = 1;

      if (curr_key > 1)
        curr_key = 0;
      
      choose_input_source_menu();
      
      if (i2c_data == 13 || i2c_data == 133) { // Enter or A
        if (curr_key == 0 && cont_to_next == false){
          cont_to_next = true;
          input_from = 1;
        }
        if (curr_key == 1 && cont_to_next == false){
          cont_to_next = true;
          input_from = 2;
        }
      }

      if (i2c_data == 27 || i2c_data == 8) { // ESC, Backspace or B
        cont_to_next = true;
        call_main_menu();
      }
    }
    delay(1);
  }
  return input_from;
}

void print_plaintext_to_menu(){
  tft.setFontSize(2);
  byte sdown = 60;
  if (curr_key == 0) {
    tft.setForeground(0xffff);
    disp_centered_text("Display", sdown + 10);
    tft.setForeground(current_inact_clr);
    disp_centered_text("Serial Terminal", sdown + 30);
  }
  if (curr_key == 1) {
    tft.setForeground(current_inact_clr);
    disp_centered_text("Display", sdown + 10);
    tft.setForeground(0xffff);
    disp_centered_text("Serial Terminal", sdown + 30);
  }
}

byte print_plaintext_to(){
  tft.fillScreen(0x0000);
  tft.setFontSize(2);
  tft.setForeground(current_inact_clr);
  disp_centered_text("Where to print plaintext?", 10);
  curr_key = 0;
  disp_button_designation();
  print_plaintext_to_menu();
  bool cont_to_next = false;
  byte input_from = 0;
  while (cont_to_next == false) {
    if (rec_d == true) {
      rec_d = false;
      //Serial.println(i2c_data);
      if (i2c_data == 130 || i2c_data == 132) { // Rightwards Arrow or Downwards Arrow
        curr_key++;
      }

      if (i2c_data == 129 || i2c_data == 131) { // Leftwards Arrow or Upwards Arrow
        curr_key--;
      }

      if (curr_key < 0)
        curr_key = 1;

      if (curr_key > 1)
        curr_key = 0;
      
      print_plaintext_to_menu();
      
      if (i2c_data == 13 || i2c_data == 133) { // Enter or A
        if (curr_key == 0 && cont_to_next == false){
          cont_to_next = true;
          input_from = 1;
        }
        if (curr_key == 1 && cont_to_next == false){
          cont_to_next = true;
          input_from = 2;
        }
      }

      if (i2c_data == 27 || i2c_data == 8) { // ESC, Backspace or B
        cont_to_next = true;
        call_main_menu();
      }
    }
    delay(1);
  }
  return input_from;
}

void other_options_menu(){
  tft.setFontSize(2);
  byte sdown = 60;
  if (curr_key == 0) {
    tft.setForeground(0xffff);
    disp_centered_text("Back Up Data From EEPROM", sdown + 10);
    tft.setForeground(current_inact_clr);
    disp_centered_text("Restore Data To EEPROM", sdown + 30);
    disp_centered_text("Factory Reset", sdown + 50);
  }
  if (curr_key == 1) {
    tft.setForeground(current_inact_clr);
    disp_centered_text("Back Up Data From EEPROM", sdown + 10);
    tft.setForeground(0xffff);
    disp_centered_text("Restore Data To EEPROM", sdown + 30);
    tft.setForeground(current_inact_clr);
    disp_centered_text("Factory Reset", sdown + 50);
  }
  if (curr_key == 2) {
    tft.setForeground(current_inact_clr);
    disp_centered_text("Back Up Data From EEPROM", sdown + 10);
    disp_centered_text("Restore Data To EEPROM", sdown + 30);
    tft.setForeground(0xffff);
    disp_centered_text("Factory Reset", sdown + 50);
  }
}

void other_options(){
  tft.fillScreen(0x0000);
  tft.setFontSize(2);
  tft.setForeground(current_inact_clr);
  disp_centered_text("Other Options", 10);
  curr_key = 0;
  disp_button_designation();
  other_options_menu();
  bool cont_to_next = false;
  while (cont_to_next == false) {
    if (rec_d == true) {
      rec_d = false;
      //Serial.println(i2c_data);
      if (i2c_data == 130 || i2c_data == 132) { // Rightwards Arrow or Downwards Arrow
        curr_key++;
      }

      if (i2c_data == 129 || i2c_data == 131) { // Leftwards Arrow or Upwards Arrow
        curr_key--;
      }

      if (curr_key < 0)
        curr_key = 3;

      if (curr_key > 3)
        curr_key = 0;
      
      other_options_menu();
      
      if (i2c_data == 13 || i2c_data == 133) { // Enter or A
        if (curr_key == 0 && cont_to_next == false){
          cont_to_next = true;
          Serial.println("Back up data");
        }
        if (curr_key == 1 && cont_to_next == false){
          cont_to_next = true;
          Serial.println("Restore data");
        }
        if (curr_key == 2 && cont_to_next == false){
          cont_to_next = true;
          Serial.println("Factory Reset");
        }
      }

      if (i2c_data == 27 || i2c_data == 8) { // ESC, Backspace or B
        cont_to_next = true;
      }
    }
    delay(1);
  }
  call_main_menu();
  return;
}

void receiveEvent(int howMany) {
    howMany = howMany;              // clear warning msg
    i2c_data = Wire.read();
    rec_d = true;
}

void setup() {
  tft.begin();
  tft.fillScreen(0x0000);
  tft.setRotation(1);
  Serial.begin(115200);
  Serial.println("Menu");
  Wire.begin(13);                // join i2c bus with address #8
  Wire.onReceive(receiveEvent); // register event
  call_main_menu();
}

void loop() {
    if (rec_d == true) {
      rec_d = false;
      //Serial.println(i2c_data);
      if (i2c_data == 130 || i2c_data == 132) { // Rightwards Arrow or Downwards Arrow
        curr_key++;
      }

      if (i2c_data == 129 || i2c_data == 131) { // Leftwards Arrow or Upwards Arrow
        curr_key--;
      }

      if (curr_key < 0)
        curr_key = 5;

      if (curr_key > 5)
        curr_key = 0;
      
      main_menu();
      
      if (i2c_data == 13 || i2c_data == 133) { // Enter or A
        if (curr_key == 0)
          logins_in_flash();
        if (curr_key == 1)
          credit_cards_in_flash();
        if (curr_key == 2){
          byte next_action = choose_input_source();
          if (next_action == 1){
            Serial.println("Encrypt string from encoder and keyboard");
          }
          if (next_action == 2){
            Serial.println("Encrypt string from serial terminal");
          }
          if (next_action == 0){
            Serial.println("String encryption was canceled by user");
          }
          call_main_menu();
        }
        if (curr_key == 3){
          byte next_action = print_plaintext_to();
          if (next_action == 1){
            Serial.println("Decrypt and print to display");
          }
          if (next_action == 2){
            Serial.println("Decrypt and print to serial terminal");
          }
          if (next_action == 0){
            Serial.println("String decryption was canceled by user");
          }
          call_main_menu();
        }
        if (curr_key == 4)
          Serial.println("SHA-256");
        if (curr_key == 5)
          other_options();
      }
    }
    delay(1);
}
